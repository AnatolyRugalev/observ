//go:build !genq
// +build !genq

// Code generated by chaingen. DO NOT EDIT.

package genq

func (f *Filter[V]) Invert() *Filter[V] {
	return f.WithFn(f.fn.Invert())
}

func (f *Filter[V]) Not(operands ...FilterFunc[V]) *Filter[V] {
	return f.WithFn(f.fn.Not(operands...))
}

func (f *Filter[V]) And(operands ...FilterFunc[V]) *Filter[V] {
	return f.WithFn(f.fn.And(operands...))
}

func (f *Filter[V]) Or(operands ...FilterFunc[V]) *Filter[V] {
	return f.WithFn(f.fn.Or(operands...))
}

func (f *Filter[V]) Count() int {
	return f.Resolve().Count()
}

func (f *Filter[V]) Group(fn GroupFunc[string, V]) *Group[string, V] {
	return f.Resolve().Group(fn)
}

func (f *Filter[V]) Merge(slices ...Slice[V]) Slice[V] {
	return f.Resolve().Merge(slices...)
}

func (f *Filter[V]) First() V {
	return f.Resolve().First()
}

func (f *Filter[V]) Last() V {
	return f.Resolve().Last()
}
